import React from "react";
import useStyles from "./styles";
import { styled } from "@stitches/react";

type ButtonProps = {
  onClick?: () => void;
  onHover?: () => void;
  overrides?: { [key: string]: any };
  disabled?: boolean;
};

const StichesButton = styled("button", {
  backgroundColor: "#012169",
  color: "#FFFFFF",
  padding: "14px 16px 14px 16px",
  border: "none",
  borderRadius: "4px",
  textAlign: "left",
  font: "normal normal bold 14px/22px Open Sans",
  fontWeight: 700,
  letterSpacing: "0px",
  opacity: "1",
  transition: "0.4s",
  lineHeight: "19px",
  cursor: "pointer",
  userSelect: "none",
  "&:hover": {
    backgroundColor: "#001034",
  },
  "&:active": {
    backgroundColor: "#001034",
  },
  "&:focus, &:focus-within": {
    boxShadow: `0 0 0 0.2rem #B3B3B3`,
    outline: "none",
  },
});

function Button(props: React.PropsWithChildren<ButtonProps>) {
  const styles = useStyles();
  return (
    <StichesButton
      className={styles.root}
      onClick={props.onClick}
      style={props.overrides}
      disabled={Boolean(props.disabled)}
    >
      {props.children}
    </StichesButton>
  );
}
export default Button;
export type { ButtonProps };
